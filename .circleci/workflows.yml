version: 2.1

orbs:
  macos: circleci/macos@2

parameters:
  source-common-modified:
    type: boolean
    default: false
  source-core-modified:
    type: boolean
    default: false
  source-surface-modified:
    type: boolean
    default: false
  source-target-modified:
    type: boolean
    default: false
  active-directory:
    type: string
    default: "/Users/distiller/project/"
fastlane:
    - &all_lanes [adhoc, unit_test]

executors:
  ios:
    macos:
      xcode: 14.2
    working_directory: /Users/distiller/project
    shell: /bin/bash --login -eo pipefail
    environment:
      FL_OUTPUT_DIR: output
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    
commands:
  print:
    parameters:
      message:
        type: string
    steps:
      - run: echo << parameters.message >>
  install_cocoapods_dependencies:
    description: "Install Dependencies"
    parameters:
      project-directory:
        type: string
    steps:
      - run:
          name: Install CocoaPods
          command: bundle exec pod install --project-directory=./<< parameters.project-directory >>
  install_bundle_dependencies:
    description: "Install Bundle Dependencies"
    parameters:
      project-directory:
        type: string
    steps:
      - run:
          name: Install Bundle Dependencies
          command: bundle config set --local path 'vendor/bundle' && cd << parameters.project-directory >> && bundle install
  run_fastlane_cmd:
    description: "Get dependencies, run specified Fastlane lane, store artifacts"
    parameters:
      lane:
        type: enum
        enum: *all_lanes
      cached:
        type: boolean
        default: true
      distributes:
        type: boolean
        default: false
      project-directory:
        type: string
      parameters:
        type: string
        default: ""
    steps:
      # Git
      - checkout
      - install_bundle_dependencies:
          project-directory: << parameters.project-directory >>
      - install_cocoapods_dependencies:
          project-directory: << parameters.project-directory >>
      - run:
          name: Invoke Fastlane
          command: cd << parameters.project-directory >> && bundle exec fastlane << parameters.lane >> << parameters.parameters >>

jobs:
  cat-fastlane:
    executor: ios
    parameters:
      parent-directory:
        type: string
      file:
        type: string
    environment:
      FASTLANE_FILE: <<pipeline.parameters.active-directory>><< parameters.parent-directory >><< parameters.file >>
    steps:
      - checkout
      - print:
          message: Printing << parameters.file >>
      - run: echo $FASTLANE_FILE
      - run: cat $FASTLANE_FILE
  run_fastlane_on_project:
    executor: ios
    parameters:
      project-directory:
        type: string
    steps:
      - run_fastlane_cmd:
          lane: unit_test
          project-directory: << parameters.project-directory >>
  adhoc-beta:
    executor: ios
    steps:
      - run_fastlane_cmd:
          lane: adhoc
          project-directory: IAR-CoreSDK-Sample/
          distributes: true
      - run_fastlane_cmd:
          lane: adhoc
          project-directory: IAR-SurfaceSDK-Sample/
          distributes: true
      - run_fastlane_cmd:
          lane: adhoc
          project-directory: IAR-TargetSDK-Sample/
          distributes: true
workflows:
  build-core:
    when: << pipeline.parameters.source-core-modified >>
    jobs:
      - cat-fastlane:
          parent-directory: IAR-CoreSDK-Sample/
          file: fastlane/Fastfile
      - run_fastlane_on_project:
          project-directory: IAR-CoreSDK-Sample/
          requires:
            - cat-fastlane
  build-surface:
    when: << pipeline.parameters.source-surface-modified >>
    jobs:
      - cat-fastlane:
          parent-directory: IAR-SurfaceSDK-Sample/
          file: fastlane/Fastfile
      - run_fastlane_on_project:
          project-directory: IAR-SurfaceSDK-Sample/
          requires:
            - cat-fastlane
  build-target:
    when: << pipeline.parameters.source-target-modified >>
    jobs:
      - cat-fastlane:
          parent-directory: IAR-TargetSDK-Sample/
          file: fastlane/Fastfile
      - run_fastlane_on_project:
          project-directory: IAR-TargetSDK-Sample/
          requires:
            - cat-fastlane
